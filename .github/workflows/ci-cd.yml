name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DATABASE_URL: "postgres://neondb_owner:npg_PL06dTzliwVn@ep-empty-forest-adg09a8q-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require"
  NEXTAUTH_URL: "https://lumpsum.vercel.app"
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

jobs:
  # Frontend Tests and Build
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run typecheck
      run: npm run typecheck
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

    - name: Build frontend
      run: npm run build
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/.next

  # Backend Tests and Build
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run typecheck
      run: npm run typecheck
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

    - name: Build backend
      run: npm run build
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

    - name: Upload backend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/dist

  # Integration Tests
  integration:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/.next

    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: backend/dist

    - name: Run integration tests
      run: npm run test:integration
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}

  # Security Audit
  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run security audit
      run: npm audit --audit-level=moderate

  # Deploy to Production (only on main branch)
  deploy:
    runs-on: ubuntu-latest
    needs: [frontend, backend, integration, security]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
