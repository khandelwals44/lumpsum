{
  "openapi": "3.0.3",
  "info": {
    "title": "lumpsum.in API",
    "version": "1.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/json": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "email": { "type": "string" }, "password": { "type": "string" } },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Tokens returned" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Rotate refresh token and issue new access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "refresh": { "type": "string" } },
                "required": ["refresh"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "New tokens returned" },
          "401": { "description": "Invalid refresh token" }
        }
      }
    },
    "/api/profile": {
      "get": {
        "summary": "Get profile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserProfile" } }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "summary": "Upsert profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UserProfile" } }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/api/goals": {
      "get": {
        "summary": "List goals",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/InvestmentGoal" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create goal",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InvestmentGoal" } }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      },
      "put": {
        "summary": "Update goal",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/InvestmentGoal" } }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      },
      "delete": {
        "summary": "Delete goal",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "object", "properties": { "id": { "type": "string" } } }
            }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/api/holdings": {
      "get": {
        "summary": "List holdings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PortfolioHolding" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create holding",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PortfolioHolding" } }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      },
      "put": {
        "summary": "Update holding",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PortfolioHolding" } }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      },
      "delete": {
        "summary": "Delete holding",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "object", "properties": { "id": { "type": "string" } } }
            }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/api/funds": {
      "get": {
        "summary": "Search funds",
        "parameters": [
          { "name": "q", "in": "query", "schema": { "type": "string" } },
          { "name": "category", "in": "query", "schema": { "type": "string" } },
          { "name": "subCategory", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MutualFund" }
                }
              }
            }
          }
        }
      }
    },
    "/calc-history": {
      "get": {
        "summary": "List calculation history (requires JWT)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CalculationHistory" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Save a calculation (requires JWT)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "calcType": { "type": "string" },
                  "inputJson": { "type": "string" },
                  "outputJson": { "type": "string" }
                },
                "required": ["calcType", "inputJson", "outputJson"]
              }
            }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      }
    }
  },
  "components": {
    "schemas": {
      "UserProfile": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "age": { "type": "integer" },
          "gender": { "type": "string" },
          "phone": { "type": "string" },
          "income": { "type": "number" },
          "expenses": { "type": "number" },
          "currentInvestments": { "type": "number" },
          "location": { "type": "string" },
          "riskAppetite": { "type": "string" },
          "currentPortfolioValue": { "type": "number" }
        }
      },
      "InvestmentGoal": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "name": { "type": "string" },
          "targetAmount": { "type": "number" },
          "timeHorizon": { "type": "integer" },
          "priority": { "type": "string" },
          "currentSavings": { "type": "number" },
          "monthlyContribution": { "type": "number" },
          "projectedValue": { "type": "number" },
          "requiredMonthlyInvestment": { "type": "number" },
          "deadline": { "type": "string", "format": "date-time" }
        }
      },
      "PortfolioHolding": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "fundId": { "type": "string" },
          "units": { "type": "number" },
          "avgCost": { "type": "number" },
          "sipAmount": { "type": "number" }
        }
      },
      "MutualFund": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "category": { "type": "string" },
          "subCategory": { "type": "string" },
          "assetClass": { "type": "string" },
          "riskLevel": { "type": "string" },
          "expenseRatio": { "type": "number" },
          "nav": { "type": "number" },
          "fundSize": { "type": "number" },
          "minInvestment": { "type": "number" },
          "benchmark": { "type": "string" },
          "fundManager": { "type": "string" },
          "inceptionDate": { "type": "string", "format": "date-time" },
          "isActive": { "type": "boolean" },
          "oneYearReturn": { "type": "number" },
          "threeYearReturn": { "type": "number" },
          "fiveYearReturn": { "type": "number" }
        }
      },
      "CalculationHistory": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "calcType": { "type": "string" },
          "inputJson": { "type": "string" },
          "outputJson": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}
